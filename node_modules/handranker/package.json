{
  "_args": [
    [
      {
        "raw": "handranker@^1.0.5",
        "scope": null,
        "escapedName": "handranker",
        "name": "handranker",
        "rawSpec": "^1.0.5",
        "spec": ">=1.0.5 <2.0.0",
        "type": "range"
      },
      "/Users/smahmud/Desktop/DigitalCrafts/9-17Immersive/Unit4/poker-alg"
    ]
  ],
  "_from": "handranker@>=1.0.5 <2.0.0",
  "_id": "handranker@1.0.5",
  "_inCache": true,
  "_location": "/handranker",
  "_npmUser": {
    "name": "loganjspears",
    "email": "loganjspears@gmail.com"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "handranker@^1.0.5",
    "scope": null,
    "escapedName": "handranker",
    "name": "handranker",
    "rawSpec": "^1.0.5",
    "spec": ">=1.0.5 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/handranker/-/handranker-1.0.5.tgz",
  "_shasum": "2b94d0ce8131c872aa41a54c3de5ab3a045dce3e",
  "_shrinkwrap": null,
  "_spec": "handranker@^1.0.5",
  "_where": "/Users/smahmud/Desktop/DigitalCrafts/9-17Immersive/Unit4/poker-alg",
  "author": {
    "name": "Logan Spears",
    "url": "loganjspears@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/loganjspears/ranker/issues"
  },
  "dependencies": {
    "underscore": "1.5.1"
  },
  "description": "poker hand ranking program",
  "devDependencies": {
    "should": "1.2.2"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "2b94d0ce8131c872aa41a54c3de5ab3a045dce3e",
    "tarball": "https://registry.npmjs.org/handranker/-/handranker-1.0.5.tgz"
  },
  "homepage": "https://github.com/loganjspears/ranker#readme",
  "keywords": [
    "poker",
    "hand"
  ],
  "license": "BSD-2-Clause",
  "main": "lib/ranker.js",
  "maintainers": [
    {
      "name": "loganjspears",
      "email": "loganjspears@gmail.com"
    }
  ],
  "name": "handranker",
  "optionalDependencies": {},
  "private": false,
  "readme": "Ranker\n======\n\nRanker is a poker hand ranking program written in javascript and available through npm.  \nIt can be used to evaluate a hand or rank a series of hands.  It supports the following game types:\n\n- Texas Holdem\n- Omaha Hi\n- Omaha Hi/Lo\n- Stud\n- Stud Hi/Lo\n- Razz\n- Kansas City Lowball\n- California Lowball\n- Deuce to Seven\n- Deuce to Six\n- Ace to Six\n\nInstallation\n---------------------\n\nRanker is available through npm:\n\n```\n  $ npm install handranker\n```\n\nUsage\n---------------------\n\nEvaluate a single hand:\n\n```\n  var Ranker = require('handranker');\n  var cards = ['3s', '3c', 'Ac', 'Ah', '3d'];\n  var result = Ranker.getHand(cards);\n```  \n\nProduces the following result:\n\n```\n    ranking: 'full house',\n    cards: [ \n      { rank: '3', suit: 's' },\n      { rank: '3', suit: 'c' },\n      { rank: 'A', suit: 'c' },\n      { rank: 'A', suit: 'h' },\n      { rank: '3', suit: 'd' } \n    ],\n    board: [],\n    playingCards: [ \n        { rank: '3', suit: 'd' },\n        { rank: '3', suit: 'c' },\n        { rank: '3', suit: 's' },\n        { rank: 'A', suit: 'h' },\n        { rank: 'A', suit: 'c' } \n    ],\n    description: 'full house threes full of aces' \n  }\n```\n\nMultiple hands can be ranked and board cards can be specified:\n\n```\n\n  var hand1 = {id: 1, cards: ['Ac', '5c']}; // tie\n  var hand2 = {id: 2, cards: ['Ad', '8d']}; // tie\n  var hand3 = {id: 3, cards: ['Kh', 'Jc']}; // win\n  var board = ['Th', '9h', 'Tc', '6c', 'Jh'];\n  var hands = [hand1, hand2, hand3];\n  var results = Ranker.orderHands(hands, board);\n\n```\n\nThe hands are ranked with higher ranked hands first keeping their original id. Tieing hands are grouped together:\n\n\n```\n\n[\n  [\n    { id: 3,\n      ranking: 'two pair',\n      cards: [ ... ],\n      board: [ ... ],\n      playingCards: [ ... ],\n      description: 'two pair jacks and tens' }\n  ],\n  [ \n    { id: 1,\n      ranking: 'pair',\n      cards: [ ... ],\n      board: [ ... ],\n      playingCards: [ ... ],\n      description: 'a pair of tens' },\n    { id: 2,\n      ranking: 'pair',\n      cards: [ ... ],\n      board: [ ... ],\n      playingCards: [ ... ],\n      description: 'a pair of tens' } \n  ]\n]\n\n\n```\n\nHands can be ranked with a game type, Ranker.TEXAS_HOLDEM is the default.  Below Omaha Hi is shown:\n\n```\n  var board = ['Ts', '9s', '8s', '3h', '2h'];\n  var hand1 = {id: 1, cards: ['As', 'Ks', 'Qs', 'Js']};\n  var hand2 = {id: 2, cards: ['2s', '2c', '9c', '8c']};\n  var hand3 = {id: 3, cards: ['4c', '4s', '5h', '5c']};\n  var hand4 = {id: 4, cards: ['7s', '6s', '3c', '2c']};\n  var hands = [hand1, hand2, hand3, hand4];\n  var results = Ranker.orderHands(hands, board, Ranker.OMAHA_HI);\n```\n\nHi/Lo is also supported.  High and low hands are grouped and low can be qualified by eight or better.  Below is a complex Stud Hi/Lo hand:\n\n```\nvar hand1 = {id: 1, cards: ['Js', '7d', '4c', '3c', 'Qc', '3s', 'Td']};\nvar hand2 = {id: 2, cards: ['7h', '6h', 'Th', '9s', 'Ks', 'Kc', '4d']};\nvar hand3 = {id: 3, cards: ['2s', 'Ah', '2d', '2c', '6s', 'Ts', 'Qd']};\nvar hand4 = {id: 4, cards: ['5c', '4s', 'Ac', '3d', '8d', 'Jd', 'Jc']};\nvar hand5 = {id: 5, cards: ['8h', 'Ad', '5h', '4h', '3h', '8c', '8s']};\nvar hand6 = {id: 6, cards: ['As', 'Qs', 'Tc', 'Kh', 'Jh', '2h', '5s']};\nvar hands = [hand1, hand2, hand3, hand4, hand5, hand6];\nvar results = Ranker.orderHands(hands, Ranker.STUD_HI_LO)\n```\n\n```\n{ \"low\" : \n[ [ { id: 4,\n      ranking: 'high card',\n      cards: [Object],\n      board: [],\n      playingCards: [Object],\n      description: 'eight high' },\n    { id: 5,\n      ranking: 'high card',\n      cards: [Object],\n      board: [],\n      playingCards: [Object],\n      description: 'eight high' } ] ]\n  \"high\" :      \n[\n  [ { id: 6,\n      ranking: 'straight',\n      cards: [Object],\n      board: [],\n      playingCards: [Object],\n      description: 'straight ace high' } ],\n  [ { id: 5,\n      ranking: 'three of a kind',\n      cards: [Object],\n      board: [],\n      playingCards: [Object],\n      description: 'three of a kind eights' } ],\n  [ { id: 3,\n      ranking: 'three of a kind',\n      cards: [Object],\n      board: [],\n      playingCards: [Object],\n      description: 'three of a kind twos' } ],\n  [ { id: 2,\n      ranking: 'pair',\n      cards: [Object],\n      board: [],\n      playingCards: [Object],\n      description: 'a pair of kings' } ],\n  [ { id: 4,\n      ranking: 'pair',\n      cards: [Object],\n      board: [],\n      playingCards: [Object],\n      description: 'a pair of jacks' } ],\n  [ { id: 1,\n      ranking: 'pair',\n      cards: [Object],\n      board: [],\n      playingCards: [Object],\n      description: 'a pair of threes' } ]\n ]\n}\n```\n\nRanker has a convenience method for a deck, also Ranker can except cards in multiple formats.\n\n```\n\nvar _ = require('underscore');\nvar Ranker = require('handranker');\n\nvar cards = _.shuffle( Ranker.deck() );\n\n\nRanker.getHand(['As', 'Ks', 'Qs', 'Js', 'Ts']);\n\nRanker.getHand([\n  {rank: \"A\", suit: \"s\"},\n  {rank: \"K\", suit: \"s\"},\n  {rank: \"Q\", suit: \"s\"},\n  {rank: \"J\", suit: \"s\"},\n  {rank: \"T\", suit: \"s\"},\n]);\n\nRanker.getHand([\n  [\"A\",\"s\"],\n  [\"K\",\"s\"],\n  [\"Q\",\"s\"],\n  [\"J\",\"s\"],\n  [\"T\",\"s\"]\n]);\n```\n\nRanks and Suits allowed by ranker:\n\n```\n\nvar RANKS = ['2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K', 'A'];\nvar SUITS = ['s', 'h', 'd', 'c'];\n\n```\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/loganjspears/ranker.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.0.5"
}
